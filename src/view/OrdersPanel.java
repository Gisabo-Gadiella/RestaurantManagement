/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package view;

import dao.CustomerDao;
import dao.OrdersDao;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.Timestamp;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;
import model.CombItem;
import model.Customers;
import model.Orders;

/**
 *
 * @author Gisabo
 */





public class OrdersPanel extends javax.swing.JFrame {

    /**
     * Creates new form OrdersPanel
     */
   private HashMap<String, Integer> customerMap = new HashMap<>();


    
    public OrdersPanel() {
        initComponents();
        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
         fillCustomerComboBox();
         loadOrders();
       
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        cmbCustomer = new javax.swing.JComboBox<>();
        btnDelete = new javax.swing.JButton();
        txtSearchCustomer = new javax.swing.JTextField();
        btnSearchCustomer = new javax.swing.JButton();
        cmbStatus = new javax.swing.JComboBox<>();
        jDateChooserOrderDate = new com.toedter.calendar.JDateChooser();
        btnUpdate = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblOrders = new javax.swing.JTable();
        btnFilterByStatus = new javax.swing.JButton();
        lblOrderId = new javax.swing.JLabel();
        txtOrderId = new javax.swing.JTextField();
        btnAdd = new javax.swing.JButton();
        btnClear = new javax.swing.JButton();
        cmbFilterStatus = new javax.swing.JComboBox<>();
        btnGoToOrderItems = new javax.swing.JButton();
        btnGoToMain = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBackground(new java.awt.Color(153, 139, 154));

        jLabel1.setFont(new java.awt.Font("Times New Roman", 1, 24)); // NOI18N
        jLabel1.setText("ORDER MANAGEMENT");

        cmbCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbCustomerActionPerformed(evt);
            }
        });

        btnDelete.setText("Delete");
        btnDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnDeleteActionPerformed(evt);
            }
        });

        btnSearchCustomer.setText("Search");
        btnSearchCustomer.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSearchCustomerActionPerformed(evt);
            }
        });

        cmbStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Pending", "Completed", "Cancelled" }));

        btnUpdate.setText("Update Order");
        btnUpdate.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnUpdateActionPerformed(evt);
            }
        });

        jLabel3.setText("Customer ID");

        jLabel4.setText("Status");

        jLabel5.setText("Order Date");

        tblOrders.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null},
                {null, null, null, null}
            },
            new String [] {
                "Order ID", "Customer Id", "Order Date", "Status"
            }
        ));
        tblOrders.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblOrdersMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tblOrders);

        btnFilterByStatus.setText("Filter by Status");
        btnFilterByStatus.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnFilterByStatusActionPerformed(evt);
            }
        });

        lblOrderId.setText("Order ID");

        btnAdd.setText("Add");
        btnAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAddActionPerformed(evt);
            }
        });

        btnClear.setText("Clear");

        cmbFilterStatus.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "All", "Pending", "Completed", "Cancelled", " " }));

        btnGoToOrderItems.setText("Go to Order Items");
        btnGoToOrderItems.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToOrderItemsActionPerformed(evt);
            }
        });

        btnGoToMain.setText("Go To Main");
        btnGoToMain.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnGoToMainActionPerformed(evt);
            }
        });

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\gh\\Documents\\NetBeansProjects\\RestaurantReservationAndOrderingSystem\\src\\Images\\online-order_6300197.png")); // NOI18N

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(36, 36, 36)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(116, 116, 116)
                        .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 47, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(jLabel1, javax.swing.GroupLayout.PREFERRED_SIZE, 275, javax.swing.GroupLayout.PREFERRED_SIZE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 672, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(txtSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, 93, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cmbFilterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(29, 29, 29)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnFilterByStatus)
                            .addComponent(btnSearchCustomer))))
                .addGap(0, 82, Short.MAX_VALUE))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(52, 52, 52)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(lblOrderId)
                            .addComponent(jLabel3)
                            .addComponent(jLabel5)
                            .addComponent(jLabel4, javax.swing.GroupLayout.PREFERRED_SIZE, 61, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnAdd))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGap(60, 60, 60)
                        .addComponent(btnDelete)))
                .addGap(48, 48, 48)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cmbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jDateChooserOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnUpdate)
                            .addComponent(btnClear))
                        .addGap(62, 62, 62)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(btnGoToMain)
                            .addComponent(btnGoToOrderItems))))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(38, 38, 38)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2, javax.swing.GroupLayout.PREFERRED_SIZE, 40, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(jPanel1Layout.createSequentialGroup()
                                .addGap(36, 36, 36)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addGroup(jPanel1Layout.createSequentialGroup()
                                        .addGap(35, 35, 35)
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                            .addComponent(txtSearchCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                            .addComponent(btnSearchCustomer))
                                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(60, 60, 60)
                                                .addComponent(cmbFilterStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                            .addGroup(jPanel1Layout.createSequentialGroup()
                                                .addGap(68, 68, 68)
                                                .addComponent(btnFilterByStatus))))
                                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(125, 125, 125))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(lblOrderId)
                                    .addComponent(txtOrderId, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(32, 32, 32)))
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(cmbCustomer, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(40, 40, 40)
                        .addComponent(jLabel5))
                    .addComponent(jDateChooserOrderDate, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(57, 57, 57)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(cmbStatus, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 69, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnAdd)
                    .addComponent(btnUpdate)
                    .addComponent(btnGoToOrderItems))
                .addGap(34, 34, 34)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btnClear)
                    .addComponent(btnDelete)
                    .addComponent(btnGoToMain))
                .addGap(173, 173, 173))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void btnDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnDeleteActionPerformed
        // TODO add your handling code here:
       int selectedRow = tblOrders.getSelectedRow();

    if (selectedRow >= 0) {
        int confirm = JOptionPane.showConfirmDialog(this, "Are you sure you want to delete this order?", "Confirm", JOptionPane.YES_NO_OPTION);

        if (confirm == JOptionPane.YES_OPTION) {
            int orderId = (int) tblOrders.getValueAt(selectedRow, 0);

            OrdersDao ordersDao = new OrdersDao();
            boolean success = ordersDao.deleteOrder(orderId) > 0;

            if (success) {
                JOptionPane.showMessageDialog(this, "Order deleted successfully!");
                loadOrders();
                clearForm(); // if you have a clear method
            } else {
                JOptionPane.showMessageDialog(this, "Failed to delete order.");
            }
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select an order to delete.");
    }

    }//GEN-LAST:event_btnDeleteActionPerformed

    private void btnSearchCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSearchCustomerActionPerformed
        // TODO add your handling code here:
        String keyword = txtSearchCustomer.getText().trim();
    if (keyword.isEmpty()) {
        JOptionPane.showMessageDialog(this, "Please enter a keyword to search.");
        return;
    }

    OrdersDao ordersDao = new OrdersDao();
    List<Orders> ordersList = ordersDao.searchOrdersByCustomerName(keyword); // you need this method!

    // Clear table
    DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
    model.setRowCount(0);

    // Refill table
    for (Orders order : ordersList) {
        model.addRow(new Object[]{
            order.getOrderId(),
            order.getCustomerId(),
            order.getOrderDate(),
            order.getStatus()
        });
    }

    }//GEN-LAST:event_btnSearchCustomerActionPerformed

    private void btnFilterByStatusActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnFilterByStatusActionPerformed
        // TODO add your handling code here:
String selectedStatus = (String) cmbFilterStatus.getSelectedItem();
    
    if (selectedStatus == null || selectedStatus.equals("All")) {
        loadOrders(); // If "All" selected, just reload all orders
        return;
    }

    OrdersDao ordersDao = new OrdersDao();
    List<Orders> ordersList = ordersDao.findOrdersByStatus(selectedStatus); // you need this method too!

    // Clear table
    DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
    model.setRowCount(0);

    // Refill table
    for (Orders order : ordersList) {
        model.addRow(new Object[]{
            order.getOrderId(),
            order.getCustomerId(),
            order.getOrderDate(),
            order.getStatus()
        });
    }
    }//GEN-LAST:event_btnFilterByStatusActionPerformed

    private void btnUpdateActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnUpdateActionPerformed
        // TODO add your handling code here:
        int selectedRow = tblOrders.getSelectedRow();
    if (selectedRow >= 0) {
        Orders order = new Orders();

        // Get orderId from the selected row
        int orderId = (int) tblOrders.getValueAt(selectedRow, 0);
        order.setOrderId(orderId);

        // Get customerId from HashMap
        String selectedCustomerName = (String) cmbCustomer.getSelectedItem();
        Integer customerId = customerMap.get(selectedCustomerName);
        order.setCustomerId(customerId);

        // Get selected date
        Date selectedDate = jDateChooserOrderDate.getDate();
        if (selectedDate != null) {
            order.setOrderDate(new Timestamp(selectedDate.getTime()));
        }

        // Get selected status
        order.setStatus((String) cmbStatus.getSelectedItem());

        // Update using DAO
        OrdersDao ordersDao = new OrdersDao();
        boolean success = ordersDao.updateOrder(order);

        if (success) {
            JOptionPane.showMessageDialog(this, "Order updated successfully!");
            loadOrders();
            clearForm();
        } else {
            JOptionPane.showMessageDialog(this, "Failed to update order.");
        }
    } else {
        JOptionPane.showMessageDialog(this, "Please select an order to update.");
    }
        
    }//GEN-LAST:event_btnUpdateActionPerformed

    private void tblOrdersMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblOrdersMouseClicked
        // TODO add your handling code here:
    int selectedRow = tblOrders.getSelectedRow();
    if (selectedRow >= 0) {
        // Set Customer ComboBox
        int customerId = (int) tblOrders.getValueAt(selectedRow, 1);
        for (Map.Entry<String, Integer> entry : customerMap.entrySet()) {
            if (entry.getValue() == customerId) {
                cmbCustomer.setSelectedItem(entry.getKey());
                break;
            }
        }

        // Set Order Date
        Timestamp orderTimestamp = (Timestamp) tblOrders.getValueAt(selectedRow, 2);
        jDateChooserOrderDate.setDate(new Date(orderTimestamp.getTime()));

        // Set Status ComboBox
        String status = (String) tblOrders.getValueAt(selectedRow, 3);
        cmbStatus.setSelectedItem(status);
    }
   
    }//GEN-LAST:event_tblOrdersMouseClicked

    private void cmbCustomerActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbCustomerActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbCustomerActionPerformed

    private void btnAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAddActionPerformed
        // TODO add your handling code here:
         if (cmbCustomer.getSelectedItem() == null) {
        JOptionPane.showMessageDialog(this, "Please select a Customer.", "Validation Error", JOptionPane.WARNING_MESSAGE);
        return;
    }
    
    if (jDateChooserOrderDate.getDate() == null) {
        JOptionPane.showMessageDialog(this, "Please select an Order Date.", "Validation Error", JOptionPane.WARNING_MESSAGE);
        return;
    }
         Orders order = new Orders();
    order.setCustomerId(getSelectedCustomerId());
    order.setOrderDate(getSelectedOrderDate());
    order.setStatus(cmbStatus.getSelectedItem().toString());

    OrdersDao ordersDao = new OrdersDao();
    boolean success = ordersDao.addOrder(order) > 0;

    if (success) {
        JOptionPane.showMessageDialog(this, "Order added successfully!");
        loadOrders(); // reload table
        clearForm();
    } else {
        JOptionPane.showMessageDialog(this, "Failed to add order.");
    }
    }//GEN-LAST:event_btnAddActionPerformed

    private void btnGoToMainActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToMainActionPerformed
        // TODO add your handling code here:
          int choice = JOptionPane.showConfirmDialog(this, "Return to Main Menu?", "Confirm", JOptionPane.YES_NO_OPTION);
    if (choice == JOptionPane.YES_OPTION) {
        MainMenuFrame mainMenu = new MainMenuFrame(); // or MainMenuFrame(role) if needed
        mainMenu.setVisible(true);
        this.dispose(); // Close current panel
    }
    }//GEN-LAST:event_btnGoToMainActionPerformed

    private void btnGoToOrderItemsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnGoToOrderItemsActionPerformed
        // TODO add your handling code here:
        int choice = JOptionPane.showConfirmDialog(this, "Go to Order Items Page?", "Confirm", JOptionPane.YES_NO_OPTION);
    if (choice == JOptionPane.YES_OPTION) {
        OrderItemsPanel orderItemsFrame = new OrderItemsPanel();
        orderItemsFrame.setVisible(true);
        this.dispose();
    }
    }//GEN-LAST:event_btnGoToOrderItemsActionPerformed

    /**
     * @param args the command line arguments
     */
    
   private void fillCustomerComboBox() {
    CustomerDao customerDao = new CustomerDao();
    List<Customers> customers = customerDao.getAllCustomers();
    cmbCustomer.removeAllItems();
    customerMap.clear(); // important to clear old data

    for (Customers c : customers) {
        cmbCustomer.addItem(c.getName());
        customerMap.put(c.getName(), c.getCustomerId());
    }
}


private int getSelectedCustomerId() {
    String selectedName = (String) cmbCustomer.getSelectedItem();
    return customerMap.get(selectedName);
}

    
    

// Get selected order date (current timestamp)
private Timestamp getSelectedOrderDate() {
    Date date = jDateChooserOrderDate.getDate(); // your JDateChooser
    if (date == null) {
        return new Timestamp(System.currentTimeMillis()); // fallback: current date/time
    }
    return new Timestamp(date.getTime());
}

    
   private void clearForm() {
    cmbCustomer.setSelectedIndex(-1); // No selection
    jDateChooserOrderDate.setDate(null); 
    cmbStatus.setSelectedIndex(-1);
}
   
   private void loadOrders() {
    try {
        OrdersDao ordersDao = new OrdersDao();
        List<Orders> ordersList = ordersDao.getAllOrders();

        DefaultTableModel model = (DefaultTableModel) tblOrders.getModel();
        model.setRowCount(0); // Clear existing rows

        for (Orders order : ordersList) {
            // Get customer name from customerId
            CustomerDao customersDao = new CustomerDao();
            Customers customer = customersDao.getCustomerById(order.getCustomerId());
            String customerName = customer != null ? customer.getName() : "Unknown";

            model.addRow(new Object[]{
                order.getOrderId(),
                order.getCustomerId(), // you can show ID if you want, or change to customerName
                order.getOrderDate(),
                order.getStatus()
            });
        }

    } catch (Exception e) {
        e.printStackTrace();
    }
}




//    
//    public static void main(String args[]) {
//        /* Set the Nimbus look and feel */
//        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
//        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
//         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
//         */
//        try {
//            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
//                if ("Nimbus".equals(info.getName())) {
//                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
//                    break;
//                }
//            }
//        } catch (ClassNotFoundException ex) {
//            java.util.logging.Logger.getLogger(OrdersPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (InstantiationException ex) {
//            java.util.logging.Logger.getLogger(OrdersPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (IllegalAccessException ex) {
//            java.util.logging.Logger.getLogger(OrdersPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
//            java.util.logging.Logger.getLogger(OrdersPanel.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
//        }
//        //</editor-fold>
//
//        /* Create and display the form */
//        java.awt.EventQueue.invokeLater(new Runnable() {
//            public void run() {
//                new OrdersPanel().setVisible(true);
//            }
//        });
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdd;
    private javax.swing.JButton btnClear;
    private javax.swing.JButton btnDelete;
    private javax.swing.JButton btnFilterByStatus;
    private javax.swing.JButton btnGoToMain;
    private javax.swing.JButton btnGoToOrderItems;
    private javax.swing.JButton btnSearchCustomer;
    private javax.swing.JButton btnUpdate;
    private javax.swing.JComboBox<String> cmbCustomer;
    private javax.swing.JComboBox<String> cmbFilterStatus;
    private javax.swing.JComboBox<String> cmbStatus;
    private com.toedter.calendar.JDateChooser jDateChooserOrderDate;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JLabel lblOrderId;
    private javax.swing.JTable tblOrders;
    private javax.swing.JTextField txtOrderId;
    private javax.swing.JTextField txtSearchCustomer;
    // End of variables declaration//GEN-END:variables
}
